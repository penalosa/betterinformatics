{"data":{"title":"1st year","short-title":"INF1","year":1},"content":"","markdown":"","sections":[{"content":"<blockquote>\n<p><em>don’t stress yourself out too much, first year doesn’t count towards your degree</em></p>\n</blockquote>\n<ul>\n<li><a href=\"http://www.laundryview.com/lvs.php?s=264\">LaundryView</a></li>\n<li><a href=\"http://homepages.inf.ed.ac.uk/imurray2/pt/outside_courses.html\">Common Outside Course Options for Informatics Students</a></li>\n<li><a href=\"/drive?next=0B4SUSkTXjliXdkQxNGRYN0hfSGs\">Year 1 Google Drive</a></li>\n<li>mailing list archives - <a href=\"https://lists.inf.ed.ac.uk/mailman/private/ug1-students/\">ug1-students</a></li>\n<li>if you have a learning disability go to the <a href=\"http://www.ed.ac.uk/student-disability-service/about\">disability service</a>! make sure you go there long before the exams, it only takes few hours and can help you quite a bit.</li>\n<li>Semester 2: <a href=\"http://progclub.inf.ed.ac.uk/\">Programming Club</a></li>\n<li>InfBase: a drop in helpdesk for you to get additional tutoring and support with your courses. See the <a href=\"https://informaticsstudentsupport.wordpress.com/schedule-at-a-glance/\">schedule</a> here - there’s no need to sign up, just drop in</li>\n</ul>\n","markdown":"> _don't stress yourself out too much, first year doesn't count towards your degree_\n\n- [LaundryView](http://www.laundryview.com/lvs.php?s=264)\n- [Common Outside Course Options for Informatics Students](http://homepages.inf.ed.ac.uk/imurray2/pt/outside_courses.html)\n- [Year 1 Google Drive](/drive?next=0B4SUSkTXjliXdkQxNGRYN0hfSGs)\n- mailing list archives - [ug1-students](https://lists.inf.ed.ac.uk/mailman/private/ug1-students/)\n- if you have a learning disability go to the [disability service](http://www.ed.ac.uk/student-disability-service/about)! make sure you go there long before the exams, it only takes few hours and can help you quite a bit.\n- Semester 2: [Programming Club](http://progclub.inf.ed.ac.uk/)\n- InfBase: a drop in helpdesk for you to get additional tutoring and support with your courses. See the [schedule](https://informaticsstudentsupport.wordpress.com/schedule-at-a-glance/) here - there's no need to sign up, just drop in\n","data":{"year":1,"title":"General","pinned":true,"links":[{"name":"handbook","url":"http://web.inf.ed.ac.uk/infweb/student-services/ito/students/year1"}]}},{"content":"<ul>\n<li><a href=\"http://neuralnetworksanddeeplearning.com/chap1.html\">Book about neural networks</a> - recommended by the lecturer</li>\n<li><a href=\"https://www.youtube.com/watch?v=aircAruvnKk&amp;list=PLZHQObOWTQDNU6R1_67000Dx_ZCJB-3pi\">3Blue1Brown</a> - really clear videos explaining neural networks and backprop</li>\n<li><a href=\"https://www.youtube.com/watch?v=wvsE8jm1GzE\">Visualising Clustering</a> - video from Google</li>\n<li><a href=\"https://www.youtube.com/watch?v=iRcNQkWNWNk\">Deduction vs Induction</a></li>\n<li>[Word learning models](/static/year1/Word Learning Models.pdf) - concept map with key ideas</li>\n<li><a href=\"https://quizlet.com/OriginalCal/folders/cognitive-science/sets\">Amazing flash cards</a> - key definitions</li>\n<li><a href=\"https://betterinformatics.com/drive?next=1Tb7WG3bdE5vop2ZR2nGlrkUXxu-9y2zj\">Full course notes and posters - 2018</a></li>\n</ul>\n<p><strong>Priority reading list</strong></p>\n<p>All of the readings are examinable, but if you want to prioritise, here is the recommended order:</p>\n<ul>\n<li>Chapters 1, 2, 3, 4 and 7 of Pinker’s “Words and Rules”, minus places where there’s no relevance to lecture content</li>\n<li>Chapter 4 of Harley’s “Psychology of Language”</li>\n<li>Any academic paper covering something you’re not sure you fully understand. For example, if you’re not 100% clear on perceptrons, have a look at the Gurney reading</li>\n</ul>\n","markdown":"\n- [Book about neural networks](http://neuralnetworksanddeeplearning.com/chap1.html) - recommended by the lecturer\n- [3Blue1Brown](https://www.youtube.com/watch?v=aircAruvnKk&list=PLZHQObOWTQDNU6R1_67000Dx_ZCJB-3pi) - really clear videos explaining neural networks and backprop\n- [Visualising Clustering](https://www.youtube.com/watch?v=wvsE8jm1GzE) - video from Google\n- [Deduction vs Induction](https://www.youtube.com/watch?v=iRcNQkWNWNk)\n- [Word learning models](/static/year1/Word Learning Models.pdf) - concept map with key ideas\n- [Amazing flash cards](https://quizlet.com/OriginalCal/folders/cognitive-science/sets) - key definitions\n- [Full course notes and posters - 2018](https://betterinformatics.com/drive?next=1Tb7WG3bdE5vop2ZR2nGlrkUXxu-9y2zj)\n\n\n\n**Priority reading list**\n\nAll of the readings are examinable, but if you want to prioritise, here is the recommended order:\n\n* Chapters 1, 2, 3, 4 and 7 of Pinker's \"Words and Rules\", minus places where there's no relevance to lecture content\n* Chapter 4 of Harley's \"Psychology of Language\"\n* Any academic paper covering something you're not sure you fully understand. For example, if you're not 100% clear on perceptrons, have a look at the Gurney reading\n\n\n\n\n\n \n","data":{"title":"Cognitive Science","year":1,"course-acronym":"inf1-cg","links":[{"name":"piazza","url":"https://piazza.com/class/jcg9m3vgspx1u9"}]}},{"content":"<!--\n-   **Likely exam topics**\n    -   Venn diagrams, Karnaugh maps, truth table\n    -   Conversion to CNF and Clausal form\n    -   Resolution (see \"[Understanding Resolution]\", Dagmara’s notes)\n    -   Explaining how you would use resolution to determine whether a\n        claim is correct\n    -   Arrow rule + a number of binary options\n    -   Gentzen rules\n    -   Counter example to an attempted Gentzen proof\n    -   Definition of sound and complete\n    -   NFA to DFA conversion\n    -   Representing an FSM by a regular expression\n    -   NOT refutation\n-->\n<ul>\n<li><a href=\"https://www.inf.ed.ac.uk/teaching/courses/inf1/cl/tutorials/2016/solutiontakehome4d.pdf\">Solution to the original 4d on the take home exam</a></li>\n<li><a href=\"/resources/inf1-cl/venn\">The venn diagram generator (based on the official version)</a></li>\n<li><a href=\"https://www.inf.ed.ac.uk/teaching/courses/inf1/cl/notes/ComputationandLogicDefinitions.pdf\">Definitions</a> (also available on Quizlet)</li>\n<li><a href=\"/resources/inf1-cl/inf1-cl-cnf-cheat-sheet.png\">CNF cheat sheet</a></li>\n<li><a href=\"http://logictools.org/\">Propositional formula to CNF converter</a></li>\n<li><a href=\"http://labs.boramalper.org/boolexman/\">boolexman</a> (boolean expression manipulator)</li>\n<li><a href=\"http://blog.ezyang.com/2012/10/visualizing-satisfiability-validity-and-entailment/\">Visualizing satisfiability, validity &amp; entailment</a></li>\n<li><a href=\"https://steemit.com/software/@cpuu/the-difference-between-soundness-and-completeness\">Soundness and Completeness</a></li>\n<li><strong>Finite State Machines</strong>\n<ul>\n<li><a href=\"http://homepages.inf.ed.ac.uk/s1020995/fsmworkbench/index.html\">FSM Workbench (also contains subset construction)</a></li>\n<li><a href=\"http://ivanzuzak.info/noam/webapps/fsm_simulator/\">simulator</a>, <a href=\"http://ivanzuzak.info/noam/webapps/fsm2regex/\">regex/automaton converter</a></li>\n</ul>\n</li>\n<li><strong>Regular Expressions</strong>\n<ul>\n<li><a href=\"http://ivanzuzak.info/noam/webapps/fsm2regex/\">regex/automaton converter</a></li>\n<li><a href=\"https://regexone.com\">Learn Regex Interactively</a></li>\n<li><a href=\"https://github.com/zeeshanu/learn-regex\">Learn Regex The Easy Way</a></li>\n<li><a href=\"http://regexr.com/\">Learn about regular expressions (has a great cheatsheet)</a></li>\n</ul>\n</li>\n</ul>\n","markdown":"<!--\n-   **Likely exam topics**\n    -   Venn diagrams, Karnaugh maps, truth table\n    -   Conversion to CNF and Clausal form\n    -   Resolution (see \"[Understanding Resolution]\", Dagmara’s notes)\n    -   Explaining how you would use resolution to determine whether a\n        claim is correct\n    -   Arrow rule + a number of binary options\n    -   Gentzen rules\n    -   Counter example to an attempted Gentzen proof\n    -   Definition of sound and complete\n    -   NFA to DFA conversion\n    -   Representing an FSM by a regular expression\n    -   NOT refutation\n-->\n-   [Solution to the original 4d on the take home exam]\n-   [The venn diagram generator (based on the official version)]\n-   [Definitions] (also available on Quizlet)\n-   [CNF cheat sheet]\n-   [Propositional formula to CNF converter]\n-   [boolexman](http://labs.boramalper.org/boolexman/) (boolean expression manipulator)\n-   [Visualizing satisfiability, validity & entailment]\n-   [Soundness and Completeness](https://steemit.com/software/@cpuu/the-difference-between-soundness-and-completeness)\n-   **Finite State Machines**\n    -   [FSM Workbench (also contains subset construction)]\n    -   [simulator], [regex/automaton converter]\n-   **Regular Expressions**\n    -   [regex/automaton converter]\n    - [Learn Regex Interactively](https://regexone.com)\n    -   [Learn Regex The Easy Way]\n    -   [Learn about regular expressions (has a great cheatsheet)]\n\n  [Understanding Resolution]: https://www.inf.ed.ac.uk/teaching/courses/inf1/cl/notes/resolution/resolution.pdf\n  [Solution to the original 4d on the take home exam]: https://www.inf.ed.ac.uk/teaching/courses/inf1/cl/tutorials/2016/solutiontakehome4d.pdf\n  [The venn diagram generator (based on the official version)]: /resources/inf1-cl/venn\n  [Definitions]: https://www.inf.ed.ac.uk/teaching/courses/inf1/cl/notes/ComputationandLogicDefinitions.pdf\n  [CNF cheat sheet]: /resources/inf1-cl/inf1-cl-cnf-cheat-sheet.png\n  [Propositional formula to CNF converter]: http://logictools.org/\n  [Visualizing satisfiability, validity & entailment]: http://blog.ezyang.com/2012/10/visualizing-satisfiability-validity-and-entailment/\n  [FSM Workbench (also contains subset construction)]: http://homepages.inf.ed.ac.uk/s1020995/fsmworkbench/index.html\n  [Learn about regular expressions (has a great cheatsheet)]: http://regexr.com/\n  [Learn Regex The Easy Way]: https://github.com/zeeshanu/learn-regex\n  [simulator]: http://ivanzuzak.info/noam/webapps/fsm_simulator/\n  [regex/automaton converter]: http://ivanzuzak.info/noam/webapps/fsm2regex/\n","data":{"title":"INF1A - Logic","year":1,"archived":false,"course-acronym":"inf1a","links":[{"name":"tutorials","url":"https://portal.theon.inf.ed.ac.uk/reports/upt/open/TP072_Tutorial_Groups/inf1-cl.shtml"}]}},{"content":"<ul>\n<li><a href=\"https://blog.inf.ed.ac.uk/da18/\">Last year’s blog</a></li>\n<li><a href=\"https://betterinformatics.com/drive?next=1uEHc6lhQpHEVOdDF86kAZBge-zMTNrwS\">Past exam solutions</a></li>\n<li><a href=\"http://sqlitebrowser.org/\">SQLite Browser</a> is a useful tool exploring and creating SQL databases that can be saved to a single file.</li>\n<li><a href=\"https://dbdesigner.net/\">DbDesigner</a> allows you to design databases online, and convert them to their related SQL queries.</li>\n<li><a href=\"http://zvon.org/xxl/DTDTutorial/General/contents.html\">DTD examples</a></li>\n<li><a href=\"http://codebeautify.org/Xpath-Tester\">XPath Tester</a></li>\n<li><a href=\"https://www.w3schools.com/xml/xpath_intro.asp\">XPath Tutorial</a></li>\n<li><a href=\"https://en.wikibooks.org/wiki/A-level_Computing/AQA/Problem_Solving,_Programming,_Operating_Systems,_Databases_and_Networking/Databases\">A Level Database Wikibook</a> (make sure you visit this on the desktop)</li>\n<li><a href=\"https://paper.dropbox.com/doc/Data-iEDC320SH3inY01zculiN\">Visgean’s incomplete notes covering most of the coursework</a></li>\n<li><a href=\"https://quizlet.com/286735221/inf1-data-and-analysis-flash-cards/\">DA Quizlet</a></li>\n</ul>\n","markdown":"\n- [Last year's blog](https://blog.inf.ed.ac.uk/da18/)\n- [Past exam solutions](https://betterinformatics.com/drive?next=1uEHc6lhQpHEVOdDF86kAZBge-zMTNrwS)\n- [SQLite Browser](http://sqlitebrowser.org/) is a useful tool exploring and creating SQL databases that can be saved to a single file.\n- [DbDesigner](https://dbdesigner.net/) allows you to design databases online, and convert them to their related SQL queries.\n- [DTD examples](http://zvon.org/xxl/DTDTutorial/General/contents.html)\n- [XPath Tester](http://codebeautify.org/Xpath-Tester)\n- [XPath Tutorial](https://www.w3schools.com/xml/xpath_intro.asp)\n- [A Level Database Wikibook](https://en.wikibooks.org/wiki/A-level_Computing/AQA/Problem_Solving,_Programming,_Operating_Systems,_Databases_and_Networking/Databases) (make sure you visit this on the desktop)\n- [Visgean's incomplete notes covering most of the coursework](https://paper.dropbox.com/doc/Data-iEDC320SH3inY01zculiN)\n- [DA Quizlet](https://quizlet.com/286735221/inf1-data-and-analysis-flash-cards/)\n","data":{"title":"Data and Analysis","year":1,"archived":true,"course-acronym":"inf1-da","links":[{"name":"fb","url":"https://www.facebook.com/groups/inf1da2019/"},{"name":"tutorials","url":"https://portal.theon.inf.ed.ac.uk/reports/upt/open/TP072_Tutorial_Groups/inf1-da.shtml"},{"name":"piazza","url":"https://piazza.com/class/jqxl6bnswlj3gu"}]}},{"content":"<ul>\n<li><strong>Tip by a tutor for the final exam</strong>: the exam is open book, so\ntaking in a copy of the previous year’s exam paper and solutions may\nbe beneficial</li>\n<li><a href=\"https://www.inf.ed.ac.uk/teaching/courses/inf1/fp/exams/\">Past papers</a></li>\n<li><a href=\"https://www.inf.ed.ac.uk/teaching/courses/inf1/fp/exams/exam-allocation-2016.pdf\">Exam allocations</a></li>\n<li><a href=\"https://en.wikibooks.org/wiki/A-level_Computing_2009/AQA/Problem_Solving,_Programming,_Operating_Systems,_Databases_and_Networking/Programming_Concepts/Tree_traversal_algorithms_for_a_binary_tree\">Tree traversal algorithms (view in desktop mode!)</a></li>\n<li>Learn You A Haskell (<a href=\"http://learnyouahaskell.com/chapters\">official online book</a>, <a href=\"/resources/inf1-fp/inf1-fp-lyah.zip\">downloadable for exam</a>)</li>\n<li><a href=\"/resources/inf1-fp/inf1-fp-function-list.txt\">Basic/library function list</a>, <a href=\"/resources/inf1-fp/inf1-fp-handy-functions.pdf\">Handy basic function cheat sheet</a></li>\n<li><a href=\"/resources/inf1-fp/troubleshooting.html\">Troubleshooting for Haskell (including Haskell-mode on Emacs)</a></li>\n<li><a href=\"https://kylecotton.github.io/\">Functional Programming blog/tutorials</a> by Kyle Cotton</li>\n</ul>\n","markdown":"-   **Tip by a tutor for the final exam**: the exam is open book, so\n    taking in a copy of the previous year's exam paper and solutions may\n    be beneficial\n-   [Past papers][papers]\n-   [Exam allocations][allocations]\n-   [Tree traversal algorithms (view in desktop mode!)][traversals]\n-   Learn You A Haskell ([official online book], [downloadable for exam][downloadable-lyah])\n-   [Basic/library function list][basic-library-functions], [Handy basic function cheat sheet][handy-functions]\n-   [Troubleshooting for Haskell (including Haskell-mode on Emacs)][troubleshooting]\n-   [Functional Programming blog/tutorials][kyle-cotton-blog] by Kyle Cotton\n\n  [papers]: https://www.inf.ed.ac.uk/teaching/courses/inf1/fp/exams/\n  [allocations]: https://www.inf.ed.ac.uk/teaching/courses/inf1/fp/exams/exam-allocation-2016.pdf\n  [traversals]: https://en.wikibooks.org/wiki/A-level_Computing_2009/AQA/Problem_Solving,_Programming,_Operating_Systems,_Databases_and_Networking/Programming_Concepts/Tree_traversal_algorithms_for_a_binary_tree\n  [official online book]: http://learnyouahaskell.com/chapters\n  [downloadable-lyah]: /resources/inf1-fp/inf1-fp-lyah.zip\n  [basic-library-functions]: /resources/inf1-fp/inf1-fp-function-list.txt\n  [handy-functions]: /resources/inf1-fp/inf1-fp-handy-functions.pdf\n  [troubleshooting]: /resources/inf1-fp/troubleshooting.html\n  [kyle-cotton-blog]: https://kylecotton.github.io/\n","data":{"title":"INF1A - Functional Programming","year":1,"course-acronym":"inf1a","archived":false,"links":[{"name":"piazza","url":"https://piazza.com/class/ititlgx4mhn31t"},{"name":"tutorials","url":"https://portal.theon.inf.ed.ac.uk/reports/upt/open/TP072_Tutorial_Groups/inf1-fp.shtml"}]}},{"content":"<blockquote>\n<p><em>the key to passing is practicing</em></p>\n</blockquote>\n<ul>\n<li>Allocations: <a href=\"https://portal.theon.inf.ed.ac.uk/reports/upt/open/TP072_Tutorial_Groups/inf1-op.shtml\">tutorials</a>, <a href=\"https://portal.theon.inf.ed.ac.uk/reports/upt/open/TP082_Laboratory_Groups/inf1-op.shtml\">labs</a></li>\n<li><a href=\"/static/year1/2016_labs_offline.zip\">Offline version of lab work</a></li>\n<li><a href=\"https://docs.oracle.com/javase/tutorial/\">Online book</a></li>\n<li><a href=\"https://stackoverflow.com/a/32621121\">Enable auto complete on Eclipse</a></li>\n<li><a href=\"https://www.inf.ed.ac.uk/teaching/exam_papers/\">Past papers</a>, and their <a href=\"http://www.inf.ed.ac.uk/teaching/courses/inf1/op/oldprog.html\">additional files</a></li>\n<li><a href=\"https://tardis.ed.ac.uk/~qaisjp/exams/index.html\">Some past paper answers</a></li>\n<li><a href=\"https://groups.inf.ed.ac.uk/inf1-op/\">Automarker service</a> - use this to mark your past papers</li>\n<li><a href=\"/resources/inf1-op/lambdas.html\">Lambda functions tutorial</a></li>\n</ul>\n<br>\n<p><strong>About the exam</strong></p>\n<ul>\n<li>\n<p>The exam is 2 hours. It used to be 3 hours in previous years. They will not pressure you for time, don’t worry.</p>\n</li>\n<li>\n<p>There is a mock exam in week 11.</p>\n</li>\n<li>\n<p>All code must compile for ANY credit at all. If you miss a single semicolon, you get 0 marks. Trip-check if it compiles and is the right file before submitting!</p>\n</li>\n<li>\n<p>Your code must also pass the very basic tests (JUnit tests, these will be provided in the exam for you to check) to get any credit at all.</p>\n</li>\n</ul>\n<!-- \n-   <span id=\"junit\">**Setting up JUnit on DICE machines, on Eclipse**</span>\n    1. Right click your project folder in the sidebar, and press Properties.\n    1. On this new screen, select \"Java build path\" on the left, and then press \"Libraries\" at the top.\n    1. Click \"Add library..\" on the right hand side.\n    1. Select \"JUnit\", press \"Next\", and then choose JUnit 4, and press finish.\n    1. Press finish on the screen again.\n    1. Now when a test file is selected, simply go to Run -> Run as -> JUnit test to run the test.\n-   **[Tutorials](http://www.inf.ed.ac.uk/teaching/courses/inf1/op/tutorials.html)** (read this document!)\n    - _[Which tutorial should I go to?](http://www.inf.ed.ac.uk/teaching/courses/inf1/op/tutorial-list.html)_\n -   **What's the deal with IntelliJ?**\n    - Unfortunately, the exam is optimised for Eclipse. Apparently IntelliJ does dodgy things in the exam, making things scary.\n    - It is recommended that you use Eclipse just for this course, and once you're done, move to the blissful IntelliJ.\n    - If you insist on using IntelliJ, follow these steps for the first run:\n      - Open the command line, and run `idea-ce`. This allows you to start the IDE.\n      - On first run, it will ask you to choose some preferences.\n      - Eventually, on the last screen or so, it will complain about permission issues, or needing an admin password.\n      - At this point, go back to the command line, and press ctrl-c to force the IDE closed.\n      - From now on, all future runs of `idea-ce` will work fine without needing to follow these instructions.\n    - **Gotchas**: you can't use the \"Open project\" feature in IntelliJ (because of reasons). To open a project, run the `idea-ce` command with a path to the project file provided to it: `idea-ce path/to/idea/project/file/here`.\n-->\n","markdown":"\n> _the key to passing is practicing_\n\n- Allocations: [tutorials], [labs]\n- [Offline version of lab work](/static/year1/2016_labs_offline.zip)\n- [Online book]\n- [Enable auto complete on Eclipse](https://stackoverflow.com/a/32621121)\n- [Past papers](https://www.inf.ed.ac.uk/teaching/exam_papers/), and their [additional files](http://www.inf.ed.ac.uk/teaching/courses/inf1/op/oldprog.html)\n- [Some past paper answers](https://tardis.ed.ac.uk/~qaisjp/exams/index.html)\n- [Automarker service](https://groups.inf.ed.ac.uk/inf1-op/) - use this to mark your past papers\n- [Lambda functions tutorial](/resources/inf1-op/lambdas.html)\n\n<br>\n\n**About the exam**\n\n* The exam is 2 hours. It used to be 3 hours in previous years. They will not pressure you for time, don't worry.\n* There is a mock exam in week 11.\n* All code must compile for ANY credit at all. If you miss a single semicolon, you get 0 marks. Trip-check if it compiles and is the right file before submitting!\n* Your code must also pass the very basic tests (JUnit tests, these will be provided in the exam for you to check) to get any credit at all.\n\n\n   [tutorials]: https://portal.theon.inf.ed.ac.uk/reports/upt/open/TP072_Tutorial_Groups/inf1-op.shtml\n   [labs]: https://portal.theon.inf.ed.ac.uk/reports/upt/open/TP082_Laboratory_Groups/inf1-op.shtml\n   [two tutorials]: http://www.inf.ed.ac.uk/teaching/courses/inf1/op/tutorial-list.html\n   [Online book]: https://docs.oracle.com/javase/tutorial/\n\n<!-- \n-   <span id=\"junit\">**Setting up JUnit on DICE machines, on Eclipse**</span>\n    1. Right click your project folder in the sidebar, and press Properties.\n    1. On this new screen, select \"Java build path\" on the left, and then press \"Libraries\" at the top.\n    1. Click \"Add library..\" on the right hand side.\n    1. Select \"JUnit\", press \"Next\", and then choose JUnit 4, and press finish.\n    1. Press finish on the screen again.\n    1. Now when a test file is selected, simply go to Run -> Run as -> JUnit test to run the test.\n-   **[Tutorials](http://www.inf.ed.ac.uk/teaching/courses/inf1/op/tutorials.html)** (read this document!)\n    - _[Which tutorial should I go to?](http://www.inf.ed.ac.uk/teaching/courses/inf1/op/tutorial-list.html)_\n -   **What's the deal with IntelliJ?**\n    - Unfortunately, the exam is optimised for Eclipse. Apparently IntelliJ does dodgy things in the exam, making things scary.\n    - It is recommended that you use Eclipse just for this course, and once you're done, move to the blissful IntelliJ.\n    - If you insist on using IntelliJ, follow these steps for the first run:\n      - Open the command line, and run `idea-ce`. This allows you to start the IDE.\n      - On first run, it will ask you to choose some preferences.\n      - Eventually, on the last screen or so, it will complain about permission issues, or needing an admin password.\n      - At this point, go back to the command line, and press ctrl-c to force the IDE closed.\n      - From now on, all future runs of `idea-ce` will work fine without needing to follow these instructions.\n    - **Gotchas**: you can't use the \"Open project\" feature in IntelliJ (because of reasons). To open a project, run the `idea-ce` command with a path to the project file provided to it: `idea-ce path/to/idea/project/file/here`.\n-->\n","data":{"title":"Object Oriented Programming","year":1,"course-acronym":"inf1b","archived":false,"links":[{"name":"piazza","url":"https://piazza.com/class/jqmnckgepk64oq"},{"name":"labs","url":"http://www.inf.ed.ac.uk/teaching/courses/inf1/op/2019/labs/index.html"}]}},{"content":"<ul>\n<li><a href=\"/static/year1/cap_reference.pdf\">Fox’s notes</a> (<a href=\"https://github.com/aptgetmoo/cap\">src</a>)</li>\n<li>Cheat sheet PDFs of the <a href=\"/drive?next=1UXuWJupUwL2aSPcDRWroDzdB2AJecDXv\">definitions</a> and <a href=\"/drive?next=1-hBc0-HDryIddgAXvuInseQ_x-bsAarR\">theorems</a> to save you time in the exam (no need to search through the textbook)</li>\n<li><a href=\"http://www.sympygamma.com/\">SympyGamma</a> - a tool similar to WolframAlpha, but also offering explanation for derivations.</li>\n<li><a href=\"http://slader.com/textbook/9781133112280-stewart-essential-calculus-early-transcendentals-2nd-edition/\">Answers for Essential calculus</a></li>\n<li><a href=\"https://www.desmos.com/calculator/tgyr42ezjq\">Riemann sums</a> online calculator</li>\n<li><a href=\"http://mei.org.uk/files/pdf/formula_book_mf2.pdf\">Lots of formulae</a></li>\n<li><a href=\"/static/year1/HL_Calculus_Option_Mind_Map.compressed.pdf\">Amazing mindmap</a></li>\n<li>Tests of Convergence: <a href=\"http://www.toomey.org/tutor/harolds_cheat_sheets/Harolds_Series_Convergence_Tests_Cheat_Sheet_2016.pdf\">cheat sheet</a>, <a href=\"https://www.studystandard.com/document/21574/preview\">flow chart</a></li>\n</ul>\n<!--\n-   If you bought your book second-hand, you will need to buy a\n    WebAssign code.\n    - First [enroll here](https://www.webassign.net/v4cgi/selfenroll/classkey.html).\n    - You can get the class key from [here](https://www.learn.ed.ac.uk/bbcswebdav/pid-2194925-dt-content-rid-4176382_1/courses/MATH080582016-7SV1SEM2/syllabus-CAP2017%281%29.pdf). Make sure you're already logged into Learn before clicking that link.\n    - The class key is EVERYTHING on the line with the numbers (the institution code does not contain numbers)\n    - To buy a WebAssign code, go into Blackwell's and ask the desk at the back (on the education floor) for a WebAssign code.\n      - If you try to buy it online through the system, the code will cost $$$ (yes, three digits).\n      - In store it costs £30.\n    - **You can use the WebAssign system for free during the first two weeks before it asks you for the code.**\n    - When you try to log in, it will ask for a code or ask you if you want to continue the trial. That's where you enter the code.\n-->\n","markdown":"\n- [Fox's notes](/static/year1/cap_reference.pdf) ([src](https://github.com/aptgetmoo/cap))\n- Cheat sheet PDFs of the [definitions](/drive?next=1UXuWJupUwL2aSPcDRWroDzdB2AJecDXv) and [theorems](/drive?next=1-hBc0-HDryIddgAXvuInseQ_x-bsAarR) to save you time in the exam (no need to search through the textbook)\n- [SympyGamma](http://www.sympygamma.com/) - a tool similar to WolframAlpha, but also offering explanation for derivations. \n- [Answers for Essential calculus](http://slader.com/textbook/9781133112280-stewart-essential-calculus-early-transcendentals-2nd-edition/)\n- [Riemann sums](https://www.desmos.com/calculator/tgyr42ezjq) online calculator\n- [Lots of formulae](http://mei.org.uk/files/pdf/formula_book_mf2.pdf)\n- [Amazing mindmap](/static/year1/HL_Calculus_Option_Mind_Map.compressed.pdf)\n- Tests of Convergence: [cheat sheet](http://www.toomey.org/tutor/harolds_cheat_sheets/Harolds_Series_Convergence_Tests_Cheat_Sheet_2016.pdf), [flow chart](https://www.studystandard.com/document/21574/preview)\n\n<!--\n-   If you bought your book second-hand, you will need to buy a\n    WebAssign code.\n    - First [enroll here](https://www.webassign.net/v4cgi/selfenroll/classkey.html).\n    - You can get the class key from [here](https://www.learn.ed.ac.uk/bbcswebdav/pid-2194925-dt-content-rid-4176382_1/courses/MATH080582016-7SV1SEM2/syllabus-CAP2017%281%29.pdf). Make sure you're already logged into Learn before clicking that link.\n    - The class key is EVERYTHING on the line with the numbers (the institution code does not contain numbers)\n    - To buy a WebAssign code, go into Blackwell's and ask the desk at the back (on the education floor) for a WebAssign code.\n      - If you try to buy it online through the system, the code will cost $$$ (yes, three digits).\n      - In store it costs £30.\n    - **You can use the WebAssign system for free during the first two weeks before it asks you for the code.**\n    - When you try to log in, it will ask for a code or ask you if you want to continue the trial. That's where you enter the code.\n-->\n","data":{"title":"Calculus and its Applications","year":1,"semester":2,"archived":false,"links":[{"name":"drps","url":"http://www.drps.ed.ac.uk/19-20/dpt/cxmath08058.htm"},{"name":"piazza","url":"https://piazza.com/class/jqnwlhu35p868r"},{"name":"webassign","url":"https://www.webassign.net/login.html"}]}},{"content":"<blockquote>\n<p><em>the maths exams are open book, so take in past paper solutions (with an index)\nas they reuse questions a lot. they might not necessarily be the same,\nbut they’ll likely be close enough to give you a hand</em></p>\n</blockquote>\n<ul>\n<li><a href=\"https://minireference.com/static/tutorials/conceptmap.pdf\">No bullshit concept maps</a> good for seeing the big picture in the course</li>\n<li><a href=\"https://minireference.com/static/tutorials/linear_algebra_in_4_pages.pdf\">Linear algebra explained in 4 pages</a> good resource to give you general idea. Might be worthwhile to go through it before the start of the course.</li>\n<li><a href=\"https://www.youtube.com/watch?v=S6yJY2NrVL0&amp;list=PL9NlTZRdFADdc4yn_OVDpv-2pDiOKU7KH&amp;index=3\">Explanatory videos from Mathapptician</a></li>\n<li><a href=\"https://www.khanacademy.org/math/linear-algebra\">Khan Academy videos</a></li>\n<li><a href=\"https://www.youtube.com/playlist?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab\">Essence of Linear Algebra (videos)</a></li>\n<li>Answers for Poole (<a href=\"http://slader.com/textbook/9780538735452-linear-algebra-a-modern-introduction-third-edition/\">3rd edition</a>, <a href=\"http://slader.com/textbook/9781285463247-linear-algebra-a-modern-introduction-4th-edition/\">4th edition</a>)</li>\n<li><a href=\"http://math-42.com/\">42 - calc app capable of Eigenstuff and other linear algebra</a></li>\n<li><a href=\"http://www.math.wvu.edu/~diamond/Math251S14/basis.pdf\">Subspaces, basis etc</a></li>\n<li>Cheat sheet PDFs of the <a href=\"/drive?next=1VdudFWN_SQvWI68XBMjdCNWOYn4lfCfe\">definitions</a> and <a href=\"/drive?next=1Fohf27v9vTqbQplNJUrnTNd3jFd4bBV1\">theorems</a> to save you time in the exam (no need to search through the textbook)</li>\n<li><strong>The Exam</strong> - 3 hours - Open Book\n<br>Section A: 40% - 6 questions - conceptual questions, a bit like Tophat\n<br>Section B: 60% - 4 questions (pick 3) - longer, conceptual questions\n<br>You may bring:\n<ul>\n<li>the Poole textbook</li>\n<li>any non-graphical calculator</li>\n<li>any notes (written / printed notes, <em>nothing bound</em>)</li>\n</ul>\n</li>\n</ul>\n","markdown":"> _the maths exams are open book, so take in past paper solutions (with an index)\n  as they reuse questions a lot. they might not necessarily be the same,\n  but they'll likely be close enough to give you a hand_\n\n-   [No bullshit concept maps](https://minireference.com/static/tutorials/conceptmap.pdf) good for seeing the big picture in the course\n-   [Linear algebra explained in 4 pages](https://minireference.com/static/tutorials/linear_algebra_in_4_pages.pdf) good resource to give you general idea. Might be worthwhile to go through it before the start of the course.\n-   [Explanatory videos from Mathapptician](https://www.youtube.com/watch?v=S6yJY2NrVL0&list=PL9NlTZRdFADdc4yn_OVDpv-2pDiOKU7KH&index=3)\n-   [Khan Academy videos](https://www.khanacademy.org/math/linear-algebra)\n-   [Essence of Linear Algebra (videos)](https://www.youtube.com/playlist?list=PLZHQObOWTQDPD3MizzM2xVFitgF8hE_ab)\n-   Answers for Poole ([3rd edition], [4th edition])\n-   [42 - calc app capable of Eigenstuff and other linear algebra](http://math-42.com/)\n-   [Subspaces, basis etc](http://www.math.wvu.edu/~diamond/Math251S14/basis.pdf)\n-   Cheat sheet PDFs of the [definitions](/drive?next=1VdudFWN_SQvWI68XBMjdCNWOYn4lfCfe) and [theorems](/drive?next=1Fohf27v9vTqbQplNJUrnTNd3jFd4bBV1) to save you time in the exam (no need to search through the textbook)\n-   **The Exam** - 3 hours - Open Book\n    <br>Section A: 40% - 6 questions - conceptual questions, a bit like Tophat\n    <br>Section B: 60% - 4 questions (pick 3) - longer, conceptual questions\n    <br>You may bring:\n    -   the Poole textbook\n    -   any non-graphical calculator\n    -   any notes (written / printed notes, *nothing bound*)\n\n  [3rd edition]: http://slader.com/textbook/9780538735452-linear-algebra-a-modern-introduction-third-edition/\n  [4th edition]: http://slader.com/textbook/9781285463247-linear-algebra-a-modern-introduction-4th-edition/\n","data":{"title":"Introduction to Linear Algebra","year":1,"semester":1,"archived":false,"links":[{"name":"drps","url":"http://www.drps.ed.ac.uk/17-18/dpt/cxmath08057.htm"}]}},{"content":"<ul>\n<li><a href=\"https://www.notion.so/Proofs-and-Problem-Solving-4277d93a1231404c9a8e60e5337cdc2b\">Printable notes</a> with all of the course material</li>\n<li><a href=\"https://en.wikipedia.org/wiki/Twelvefold_way\">Twelvefold way</a> for combinatorics problems.</li>\n<li>The course will follow the book A Concise Introduction to Pure Mathematics, by Martin Liebeck, 4th Ed. 015, CRC Press, £25.99</li>\n<li>To pass the course you must achieve an average of more than 40% AND at least 40% in the examination.</li>\n<li>Cheatsheet with all the notations, definitions, theorems, propositions, and examples from the textbook (condensed into 38 pages) grouped by sections: <a href=\"http://betterinformatics.com/drive?next=1nm5puvICtw1RlVnMc0oarYt4Czv8sE9H\">pdf</a>, <a href=\"https://github.com/boramalper/inf1-pps-cheatsheet\">source</a></li>\n</ul>\n","markdown":"\n- [Printable notes](https://www.notion.so/Proofs-and-Problem-Solving-4277d93a1231404c9a8e60e5337cdc2b) with all of the course material\n- [Twelvefold way](https://en.wikipedia.org/wiki/Twelvefold_way) for combinatorics problems.\n- The course will follow the book A Concise Introduction to Pure Mathematics, by Martin Liebeck, 4th Ed. 015, CRC Press, £25.99\n- To pass the course you must achieve an average of more than 40% AND at least 40% in the examination.\n- Cheatsheet with all the notations, definitions, theorems, propositions, and examples from the textbook (condensed into 38 pages) grouped by sections: [pdf](http://betterinformatics.com/drive?next=1nm5puvICtw1RlVnMc0oarYt4Czv8sE9H), [source](https://github.com/boramalper/inf1-pps-cheatsheet)\n","data":{"title":"Proofs and Problem Solving","year":1,"semester":2,"archived":false}},{"content":"<ul>\n<li>These notes assume you have done INF1-CL.</li>\n<li>if P, then Q\n<ul>\n<li>P is the <strong>antecedent</strong></li>\n<li>Q is the <strong>consequent</strong></li>\n</ul>\n</li>\n<li><strong>English to implication</strong>\n<ul>\n<li><code>P -&gt; Q</code>: If P, Q</li>\n<li><code>P -&gt; Q</code>: P, only if Q</li>\n<li><code>Q -&gt; P</code>: P, if Q</li>\n<li><code>Q -&gt; P</code>: Only if P, Q</li>\n</ul>\n</li>\n<li>Inference rules:\n<ul>\n<li><code>dn</code>, double negation: <code>P</code> becomes <code>~~P</code></li>\n<li><code>r</code>, repetition: <code>P</code> becomes <code>P</code></li>\n<li><code>mp</code>, modus ponus: <code>P -&gt; Q</code>, <code>P</code> becomes <code>Q</code></li>\n<li><code>mt</code>, modus tollens: <code>P -&gt; Q</code>, <code>~Q</code> becomes <code>~P</code></li>\n</ul>\n</li>\n<li>Kinds of derivations:\n<ul>\n<li><code>dd</code>, direct derivation (<code>2,dd</code> means that rule 2 is the derivation)\n<ul>\n<li>When a line (which is not a show line) is introduced whose\nsentence is the same as the sentence on the (closest previous\nuncancelled) show line, one may, as the next step, write “dd”\nfollowing the justification for that line, draw a line through\nthe word “Show”, and draw a box around all the lines below\nthe show line, including the current line.</li>\n</ul>\n</li>\n<li><code>cd</code>, conditional derivation</li>\n<li><code>id</code>, indirect derivation</li>\n</ul>\n</li>\n<li>Definitions:\n<ul>\n<li>An argument is a sequence of sentences, consisting of\npremises and a conclusion, where the conclusion is what is\ntrying to be established, and the premises, taken together,\nare alleged to support the conclusion.</li>\n</ul>\n</li>\n</ul>\n","markdown":"\n- These notes assume you have done INF1-CL.\n- if P, then Q\n  - P is the **antecedent**\n  - Q is the **consequent**\n- **English to implication**\n  - `P -> Q`: If P, Q\n  - `P -> Q`: P, only if Q\n  - `Q -> P`: P, if Q\n  - `Q -> P`: Only if P, Q\n- Inference rules:\n  - `dn`, double negation: `P` becomes `~~P`\n  - `r`, repetition: `P` becomes `P`\n  - `mp`, modus ponus: `P -> Q`, `P` becomes `Q`\n  - `mt`, modus tollens: `P -> Q`, `~Q` becomes `~P` \n- Kinds of derivations:\n  - `dd`, direct derivation (`2,dd` means that rule 2 is the derivation)\n    - When a line (which is not a show line) is introduced whose\nsentence is the same as the sentence on the (closest previous\nuncancelled) show line, one may, as the next step, write “dd”\nfollowing the justification for that line, draw a line through\nthe word “Show”, and draw a box around all the lines below\nthe show line, including the current line.\n  - `cd`, conditional derivation\n  - `id`, indirect derivation\n- Definitions:\n  - An argument is a sequence of sentences, consisting of\npremises and a conclusion, where the conclusion is what is\ntrying to be established, and the premises, taken together,\nare alleged to support the conclusion.\n","data":{"title":"Logic 1","year":1,"semester":2,"ordering":5,"archived":true,"links":[{"name":"course page","url":"http://brianrabern.net/logic1.html"},{"name":"homework","url":"http://www.elogic.brianrabern.net/login"},{"name":"tutorial videos","url":"http://brianrabern.net/elogic/elogic-tutorial.html"}]}}],"allSections":[{"year":1,"title":"General","pinned":true,"links":[{"name":"handbook","url":"http://web.inf.ed.ac.uk/infweb/student-services/ito/students/year1"}]},{"title":"Cognitive Science","year":1,"course-acronym":"inf1-cg","links":[{"name":"piazza","url":"https://piazza.com/class/jcg9m3vgspx1u9"}]},{"title":"INF1A - Logic","year":1,"archived":false,"course-acronym":"inf1a","links":[{"name":"tutorials","url":"https://portal.theon.inf.ed.ac.uk/reports/upt/open/TP072_Tutorial_Groups/inf1-cl.shtml"}]},{"title":"Data and Analysis","year":1,"archived":true,"course-acronym":"inf1-da","links":[{"name":"fb","url":"https://www.facebook.com/groups/inf1da2019/"},{"name":"tutorials","url":"https://portal.theon.inf.ed.ac.uk/reports/upt/open/TP072_Tutorial_Groups/inf1-da.shtml"},{"name":"piazza","url":"https://piazza.com/class/jqxl6bnswlj3gu"}]},{"title":"INF1A - Functional Programming","year":1,"course-acronym":"inf1a","archived":false,"links":[{"name":"piazza","url":"https://piazza.com/class/ititlgx4mhn31t"},{"name":"tutorials","url":"https://portal.theon.inf.ed.ac.uk/reports/upt/open/TP072_Tutorial_Groups/inf1-fp.shtml"}]},{"title":"Object Oriented Programming","year":1,"course-acronym":"inf1b","archived":false,"links":[{"name":"piazza","url":"https://piazza.com/class/jqmnckgepk64oq"},{"name":"labs","url":"http://www.inf.ed.ac.uk/teaching/courses/inf1/op/2019/labs/index.html"}]},{"title":"Calculus and its Applications","year":1,"semester":2,"archived":false,"links":[{"name":"drps","url":"http://www.drps.ed.ac.uk/19-20/dpt/cxmath08058.htm"},{"name":"piazza","url":"https://piazza.com/class/jqnwlhu35p868r"},{"name":"webassign","url":"https://www.webassign.net/login.html"}]},{"title":"Introduction to Linear Algebra","year":1,"semester":1,"archived":false,"links":[{"name":"drps","url":"http://www.drps.ed.ac.uk/17-18/dpt/cxmath08057.htm"}]},{"title":"Proofs and Problem Solving","year":1,"semester":2,"archived":false},{"title":"Logic 1","year":1,"semester":2,"ordering":5,"archived":true,"links":[{"name":"course page","url":"http://brianrabern.net/logic1.html"},{"name":"homework","url":"http://www.elogic.brianrabern.net/login"},{"name":"tutorial videos","url":"http://brianrabern.net/elogic/elogic-tutorial.html"}]},{"year":2,"title":"Discrete Math and Probability","course-acronym":"DMP","links":[{"name":"drps","url":"http://www.drps.ed.ac.uk/20-21/dpt/cxinfr08031.htm"},{"name":"drive","url":"/drive?next=0B4SUSkTXjliXbWN0YUF5cEx1ZFE"}]},{"year":2,"title":"General","pinned":true,"links":[{"name":"guide","url":"https://www.inf.ed.ac.uk/teaching/years/ug2/inf2Guide.html"},{"name":"mailing list archives","url":"https://lists.inf.ed.ac.uk/mailman/private/ug2-students/"}]},{"year":2,"title":"INF2-FDS - Foundations of Data Science","course-acronym":"inf2-fds"},{"year":2,"title":"INF2-IADS - Intro to Algorithms and Data Structures","course-acronym":"inf2-iads"},{"year":2,"title":"INF2A - Processing Formal and Natural Languages","course-acronym":"inf2a","archived":true,"links":[{"name":"piazza","url":"https://piazza.com/class/jkuzor9eypxov"},{"name":"schedule","url":"https://www.inf.ed.ac.uk/teaching/courses/inf2a/schedule.html"}]},{"year":2,"title":"INF2B - Learning","course-acronym":"inf2b","links":[{"name":"piazza (learning)","url":"https://piazza.com/class/jc7iuf9dssg44f"}]},{"year":2,"title":"INF2C - Computer Systems","course-acronym":"inf2c-cs","links":[{"name":"piazza","url":"https://piazza.com/class/jlwbbtv8kqs4v"},{"name":"tutorials","url":"https://portal.theon.inf.ed.ac.uk/reports/upt/open/TP072_Tutorial_Groups/inf2c-cs.shtml"},{"name":"labs","url":"https://portal.theon.inf.ed.ac.uk/reports/upt/open/TP082_Laboratory_Groups/inf2c-cs.shtml"}]},{"year":2,"title":"INF2C - Software Engineering","course-acronym":"inf2c-se","links":[{"name":"piazza","url":"https://piazza.com/class/jmutcv31n9s6vm"}]},{},{"year":2,"title":"General","pinned":true,"links":[{"name":"guide","url":"https://www.inf.ed.ac.uk/teaching/years/ug2/inf2Guide.html"},{"name":"mailing list archives","url":"https://lists.inf.ed.ac.uk/mailman/private/ug2-students/"}]},{"year":3,"credits":10,"archived":true,"title":"ABS - Agent Based Systems","course-acronym":"abs","links":[{"name":"info","url":"http://www.drps.ed.ac.uk/17-18/dpt/cxinfr10073.htm"}]},{"year":3,"credits":10,"archived":false,"title":"ADS - Algorithms and Data Structures","course-acronym":"ads","links":null},{},{"year":3,"credits":20,"title":"CARD - Computer Architecture and Design","course-acronym":"card"},{"year":3,"credits":10,"archived":false,"title":"CCS - Computational Cognitive Science","course-acronym":"ccs","links":null},{"year":3,"credits":20,"archived":false,"title":"COMN - Computer Communications and Networks","course-acronym":"comn","links":null},{"year":3,"credits":20,"archived":false,"title":"CS - Computer Security","course-acronym":"cs","links":null},{"year":3,"credits":20,"archived":false,"title":"CT - Compiling Techniques","course-acronym":"ct","learn":false,"links":[{"name":"piazza","url":"https://piazza.com/ed.ac.uk/fall2018/ct"}]},{"year":3,"credits":20,"archived":false,"title":"DBS -\tDatabase Systems","course-acronym":"dbs","links":null},{"year":3,"credits":10,"archived":false,"title":"EPL - Elements of Programming Languages","course-acronym":"epl","links":null},{"year":3,"credits":10,"archived":false,"title":"FNLP - Foundations of Natural Language Processing","course-acronym":"fnlp","links":null},{},{"year":3,"credits":20,"archived":false,"title":"IAML - Introductory Applied Machine Learning","course-acronym":"iaml","links":null},{"year":3,"credits":20,"archived":false,"title":"ILP - Informatics Large Practical","course-acronym":"ilp","links":[{"name":"learn","url":"http://course.inf.ed.ac.uk/ilp"}]},{"year":3,"credits":10,"archived":false,"title":"ITCS - Introduction to Theoretical Computer Science","course-acronym":"itcs","links":null},{"year":3,"credits":10,"archived":false,"title":"IVR - Introduction to Vision and Robotics","course-acronym":"ivr","links":null},{"year":3,"archived":true,"credits":10,"title":"LP - Logic Programming","course-acronym":"lp","links":[{"name":"info","url":"http://www.drps.ed.ac.uk/17-18/dpt/cxinfr09031.htm"}]},{"year":3,"credits":20,"archived":false,"title":"OS - Operating Systems","course-acronym":"os","links":null},{"year":3,"credits":10,"archived":false,"title":"PI - Professional Issues","course-acronym":"pi","links":null},{"year":3,"credits":20,"archived":false,"title":"SDP - System Design Project","course-acronym":"sdp","links":null},{"year":3,"title":"SEOC","archived":true},{"year":3,"credits":10,"archived":false,"title":"ST -\tSoftware Testing","course-acronym":"st","links":null},{"year":4,"title":"ADBS","course-acronym":"adbs","archived":false},{"year":4,"title":"AFDS","course-acronym":"afds"},{"year":4,"title":"AGTA","course-acronym":"agta"},{"year":4,"title":"APL","course-acronym":"apl","archived":true},{"year":4,"title":"AV","course-acronym":"av","archived":false},{"year":4,"title":"CAV","course-acronym":"cav","archived":false},{"year":4,"title":"CG - Computer Graphics","course-acronym":"cg","learn":false},{"year":4,"title":"CN","course-acronym":"cn","archived":false},{"year":4,"title":"CNV","course-acronym":"cnv","archived":true},{"year":4,"title":"COC","course-acronym":"coc","archived":true},{"year":4,"title":"COPT","course-acronym":"copt","archived":false},{"year":4,"title":"DIE","course-acronym":"die","archived":true},{"year":4,"title":"DS","course-acronym":"ds","archived":false},{"year":4,"title":"ES","course-acronym":"es","archived":true},{"year":4,"title":"EXC - Extreme Computing","course-acronym":"exc"},{"year":4,"title":"General","pinned":true},{"year":4,"title":"HCI - Human Computer Interaction","course-acronym":"hci","archived":false},{"year":4,"title":"IAR","course-acronym":"iar","archived":false},{"year":4,"title":"IT","course-acronym":"it","archived":true},{"year":4,"title":"MASWS (SWS as of 2015 Exam)","course-acronym":"sws","archived":true},{"year":4,"title":"MLP - Machine Learning Practical","course-acronym":"mlp","learn":false},{"year":4,"title":"MLPR","course-acronym":"mlpr"},{"year":4,"title":"MT","course-acronym":"mt","archived":false},{"year":4,"title":"NLG","course-acronym":"nlg","archived":true},{"year":4,"title":"PA","course-acronym":"pa","archived":false},{"year":4,"title":"PM","course-acronym":"pm","archived":false},{"year":3,"title":"SP - Speech Processing","semester":1,"link":"http://www.speech.zone/courses/speech-processing/"},{"year":4,"title":"PPLS","course-acronym":"ppls","archived":false},{"year":4,"title":"Honours Project","course-acronym":"proj","pinned":true,"learn":false},{"year":4,"title":"RC","course-acronym":"rc","archived":false},{"year":4,"title":"SAPM","course-acronym":"sapm","archived":false},{"year":4,"course-acronym":"sp","title":"SP - Secure Programming"},{"year":4,"title":"TTDS - Text Technologies in Data Science","course-acronym":"ttds"},{"year":5,"title":"BIO2","course-acronym":"bio2"},{"year":5,"title":"DAPA","course-acronym":"dapa"},{"year":5,"title":"DME","course-acronym":"dme"},{"year":5,"title":"General","pinned":true},{"year":5,"course-acronym":"it","archived":true,"title":"IT"},{"year":5,"title":"NIP","course-acronym":"nip"},{"year":5,"title":"NLU","course-acronym":"nlu"},{"year":5,"title":"PMR","course-acronym":"pmr"},{"year":5,"title":"RL","course-acronym":"rl"},{"year":"start","title":"E-learning"},{"year":"start","title":"Exam Related"},{"year":"start","title":"Jobs"},{"year":"start","title":"Self Care"},{"year":"start","title":"Places to study","archived":true},{"year":"start","title":"Technical"},{"year":"start","title":"Useful Links","pinned":true}]}